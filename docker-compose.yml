
version: '3.8'

services:
  # Redis Database
  redis:
    image: redis:7-alpine
    container_name: askql-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - askql-network

  # Backend Go Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: askql-backend
    ports:
      - "8080:8080"
    environment:
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
    env_file:
      - ./backend/.env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - askql-network

  # Frontend Next.js App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: askql-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - askql-network

  # Optional: Redis Web UI
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: askql-redis-ui
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - askql-network

volumes:
  redis_data:

networks:
  askql-network:
    driver: bridge